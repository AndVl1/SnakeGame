name: Merge Develop to Main

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: '–¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞'
        required: true
        default: 'manual'
        type: string

jobs:
  merge:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
    
    - name: Get commits to merge
      id: get-commits
      run: |
        git fetch origin develop main
        COMMITS=$(git log --pretty=format:"- %s" origin/main..origin/develop)
        echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Check for changes
      id: check-changes
      run: |
        git fetch origin develop main
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–∏—Ç–æ–≤ –º–µ–∂–¥—É –≤–µ—Ç–∫–∞–º–∏
        COMMITS_COUNT=$(git rev-list --count origin/main..origin/develop)
        if [ "$COMMITS_COUNT" -eq "0" ]; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "‚ùå –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —Å–ª–∏—è–Ω–∏—è –∏–∑ develop –≤ main"
          exit 1
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ $COMMITS_COUNT –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è —Å–ª–∏—è–Ω–∏—è"
        fi
    
    - name: Create release branch
      if: steps.check-changes.outputs.has_changes == 'true'
      run: |
        git checkout develop
        git pull origin develop
        git checkout -b release/develop-to-main
        git push origin release/develop-to-main --force
    
    - name: Create Pull Request
      if: steps.check-changes.outputs.has_changes == 'true'
      id: create-pr
      run: |
        gh pr create \
          --title "Merge develop into main" \
          --body "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ PR –¥–ª—è —Å–ª–∏—è–Ω–∏—è –≤–µ—Ç–∫–∏ develop –≤ main \

          –°–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ GitHub Actions \

          ## –ö–æ–º–º–∏—Ç—ã –¥–ª—è —Å–ª–∏—è–Ω–∏—è: \

          ${{ steps.get-commits.outputs.COMMITS }}" \
          --base main \
          --head release/develop-to-main
        
        PR_URL=$(gh pr view --json url -q .url)
        echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT
    
    - name: Notify Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_CHAT }}
        token: ${{ secrets.TG_KEY }}
        message: |
          üîÑ –ó–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞
          
          –°–æ–∑–¥–∞–Ω Pull Request –∏–∑ –≤–µ—Ç–∫–∏ develop –≤ main
          
          –°—Å—ã–ª–∫–∞ –Ω–∞ PR: ${{ steps.create-pr.outputs.PR_URL }}
          
          –û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ PR...

    - name: Notify Error to Telegram
      if: failure()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_CHAT }}
        token: ${{ secrets.TG_KEY }}
        message: |
          ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–ª–∏–∑–∞
          
          –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Pull Request –∏–∑ develop –≤ main
          
          –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–º–º–∏—Ç: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
          –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—Ñ–µ–π–ª–µ–Ω–Ω—ã–π —ç–∫—à–Ω: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É. 