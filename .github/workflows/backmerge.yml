name: Create Backmerge PR

on:
  push:
    branches:
      - main

jobs:
  create-backmerge-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Check existing PR
        id: check-pr
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π PR —á–µ—Ä–µ–∑ GitHub API
          PR_DATA=$(curl -s -H "Authorization: token ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:backmerge/main-to-develop&state=open")
          
          PR_NUMBER=$(echo "$PR_DATA" | jq -r '.[0].number // empty')
          if [ ! -z "$PR_NUMBER" ]; then
            echo "existing_pr=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π PR #$PR_NUMBER"
          else
            echo "existing_pr=0" >> $GITHUB_OUTPUT
            echo "‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π PR –Ω–µ –Ω–∞–π–¥–µ–Ω"
          fi

      - name: Close existing PR
        if: steps.check-pr.outputs.existing_pr != '0'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π PR —á–µ—Ä–µ–∑ GitHub API
          curl -X PATCH \
            -H "Authorization: token ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"state":"closed"}' \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.check-pr.outputs.existing_pr }}"
          
          # –£–¥–∞–ª—è–µ–º –≤–µ—Ç–∫—É —á–µ—Ä–µ–∑ GitHub API
          curl -X DELETE \
            -H "Authorization: token ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/backmerge/main-to-develop"
          
          echo "‚úÖ –ó–∞–∫—Ä—ã—Ç PR #${{ steps.check-pr.outputs.existing_pr }} –∏ —É–¥–∞–ª–µ–Ω–∞ –≤–µ—Ç–∫–∞"

      - name: Create backmerge branch
        run: |
          # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –≤–µ—Ç–∫–∏
          git fetch origin main develop
          
          # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          git branch -D backmerge/main-to-develop || true
          
          # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É –∏–∑ develop
          git checkout develop
          git pull origin develop
          git checkout -b backmerge/main-to-develop
          
          # –ú–µ—Ä–∂–∏–º main –≤ develop
          git merge origin/main --no-ff -m "Merge main into develop"
          
          # –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—É—à–∏–º –≤–µ—Ç–∫—É
          git push origin backmerge/main-to-develop --force

      - name: Get commits to merge
        id: get-commits
        run: |
          git fetch origin main develop
          COMMITS=$(git log --pretty=format:"- %s" origin/develop..origin/main)
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create-pr
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            --title "Backmerge: main ‚Üí develop" \
            --body "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–º–µ—Ä–∂ main –≤ develop \

            –°–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ GitHub Actions \

            ## –ö–æ–º–º–∏—Ç—ã –¥–ª—è —Å–ª–∏—è–Ω–∏—è: \

            ${{ steps.get-commits.outputs.COMMITS }} \

            ## –ú–µ—Ç–∫–∏: \

            - backmerge \

            - automated" \
            --base develop \
            --head backmerge/main-to-develop \
            --label "backmerge,automated" \
            --assignee "${{ github.actor }}"
          
          PR_URL=$(gh pr view --json url -q .url)
          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT

      - name: Notify Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT }}
          token: ${{ secrets.TG_KEY }}
          message: |
            üîÑ –°–æ–∑–¥–∞–Ω PR –¥–ª—è –±—ç–∫–º–µ—Ä–∂–∞ main –≤ develop
            
            –°—Å—ã–ª–∫–∞ –Ω–∞ PR: ${{ steps.create-pr.outputs.PR_URL }}
            
            –û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ PR...

      - name: Notify Error to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT }}
          token: ${{ secrets.TG_KEY }}
          message: |
            ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–º–µ—Ä–∂–∞
            
            –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Pull Request –∏–∑ main –≤ develop
            
            –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–º–º–∏—Ç: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
            –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—Ñ–µ–π–ª–µ–Ω–Ω—ã–π —ç–∫—à–Ω: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É. 
